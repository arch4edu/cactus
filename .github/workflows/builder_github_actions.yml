name: Builder (Github Actions)

on:
  workflow_dispatch:
    inputs:
      pkgbase:
        description: 'Path to pkgbase'
        required: true

jobs:

  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
    env:
      CACTUS_CONFIG: ${{ secrets.CACTUS_CONFIG }}

    steps:
      - name: Get time
        id: time
        run: echo "::set-output name=time::$(date +%F-%T)"

      - name: Set up pacman db cache
        uses: actions/cache@master
        with:
          path: /var/lib/pacman/sync
          key: pacman-db-x86_64-${{ steps.time.outputs.time }}
          restore-keys: pacman-db-x86_64-

      - name: Set up pacman package cache
        uses: actions/cache@master
        with:
          path: /var/cache/pacman/pkg
          key: pacman-package-x86_64-${{ steps.time.outputs.time }}
          restore-keys: pacman-package-x86_64-

      - uses: actions/checkout@master
        with:
          path: cactus

      - uses: actions/checkout@master
        with:
          repository: petronny/djangorm
          path: djangorm

      - name: Install runtime dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed base-devel devtools dbus git jq wget zsh pyalpm python-django python-mysqlclient python-lxml python-requests python-setuptools python-toposort python-tornado python-yaml python-toml yq zsh

      - name: Export configurations
        id: config
        run: python -m cactus.common.config

      - uses: actions/checkout@master
        with:
          repository: ${{ steps.config.outputs.github_repository }}
          path: repository
          token: ${{ steps.config.outputs.github_token }}

      - uses: actions/checkout@master
        with:
          repository: petronny/cactus
          path: cactus

      - uses: actions/checkout@master
        with:
          repository: ${{ steps.config.outputs.pacman_keyring_repository }}
          path: pacman/${{ steps.config.outputs.pacman_repository }}/keyring

      - uses: actions/checkout@master
        with:
          repository: ${{ steps.config.outputs.pacman_mirrorlist_repository }}
          path: pacman/${{ steps.config.outputs.pacman_repository }}/mirrorlist

      - name: Configure makepkg
        run: |
          sed -e "s|MAKEFLAGS=.*|MAKEFLAGS=-j$(nproc)|" -i /etc/makepkg.conf
          dbus-uuidgen --ensure=/etc/machine-id
          useradd -g wheel makepkg
          echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chown -R makepkg:root repository

      - name: Configure pacman repository
        run: |
          mkdir -p pacman/${{ steps.config.outputs.pacman_repository }}/db
          cd pacman/${{ steps.config.outputs.pacman_repository }}
          cp keyring/* /usr/share/pacman/keyrings/
          pacman-key --gpgdir gnupg --init
          pacman-key --gpgdir gnupg --populate ${{ steps.config.outputs.pacman_repository }}
          echo [options] > pacman.conf
          pacman-conf | grep '^Architecture' >> pacman.conf
          echo [${{ steps.config.outputs.pacman_repository }}] >> pacman.conf
          sed 's/#//' mirrorlist/*mirrorlist* >> pacman.conf
          pacman -Sy --config pacman.conf --dbpath db

      - name: Configure git
        run: |
          git config --global --add safe.directory $(realpath repository)
          cd repository
          git config user.email ${{ steps.config.outputs.email_address }}
          git config user.name ${{ steps.config.outputs.email_name }}

      - name: Add path
        run: echo "$(realpath cactus/builder/bin)" >> $GITHUB_PATH

      - name: Build
        id: build
        run: |
          cd repository/${{ github.event.inputs.pkgbase }}
          su makepkg -c cactus-build | tee build.log
          if [ $(grep -c '==> Running checkpkg' build.log) -gt 0 ]
          then
            echo ::set-output name=result::built
          else
            echo ::set-output name=result::error
          fi

      - name: Fix package name
        if: ${{ steps.build.outputs.result }} == 'built'
        run: |
          cd repository/${{ github.event.inputs.pkgbase }}
          for i in '*.pkg.tar.zst'
          do
            [ $(echo $i | grep : -c) -gt 0 ] && mv $i $(echo $i | sed 's/:/COLON/g')
          done

      - name: Upload build log
        uses: actions/upload-artifact@master
        if: ${{ always() }}
        with:
          name: ${{ github.run_id }}.log
          path: repository/${{ github.event.inputs.pkgbase }}/build.log

      - name: Upload package
        uses: actions/upload-artifact@master
        with:
          name: ${{ github.run_id }}.package
          path: repository/${{ github.event.inputs.pkgbase }}/*.pkg.tar.zst

      - name: Push changes
        if: ${{ steps.build.outputs.result }} == 'built'
        run: |
          cd repository/${{ github.event.inputs.pkgbase }}
          git-commit || exit
          git-push

      - name: Update status
        if: ${{ always() }}
        run: |
          python -m cactus.builder.update ${{ github.event.inputs.pkgbase }} ${{ steps.build.outputs.result }} ${{ github.run_id}}
