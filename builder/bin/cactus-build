#!/bin/zsh
set -e

_eval(){
	echo $@
	eval $@
}

pre_build(){
	oldver=$(read-version)

	_pre_build=$(yq -r '.pre_build' cactus.yaml)
	_eval $_pre_build

	# PKGBUILD fixes
	sed -e '/^PKGEXT=/d' -e '/^groups=(/d' -i PKGBUILD

	# Recieve GPG keys
	recv-gpg-keys || :

	makepkg -A -od --noprepare
	newver=$(read-version)
	auto-bump-pkgrel "$oldver" "$newver"
}

post_build(){
	_post_build=$(yq -r '.post_build' cactus.yaml)
	_eval $_post_build
	[ -z "$(find -maxdepth 1 -name '*.pkg.tar.zst' | wc -l)" ] && echo "No package built." && exit 1
	echo 'Cactus has successfully built the package.'
}

set_cpu(){
	total=$(nproc)
	cpus=$(yq -r '.cpus' cactus.yaml)
	if [ "$cpus" = "null" ]
	then
		sudo sed -e "s/#\?MAKEFLAGS=.*/MAKEFLAGS=-j${total}/" -i /etc/makepkg.conf
	else
		sudo sed -e "s/#\?MAKEFLAGS=.*/MAKEFLAGS=-j${cpus}/" -i /etc/makepkg.conf
		sed -n '/processor.*:.*3/q;p' /proc/cpuinfo > cpuinfo
		sudo mount --bind cpuinfo /proc/cpuinfo
		cpus=$(seq $total | shuf -n $cpus | tr '\n' ',')
		echo taskset -c ${cpus%,}
	fi
}

build(){
	build_prefix=$(yq -r .build_prefix cactus.yaml)
	makechrootpkg_args=$(yq -r .makechrootpkg_args cactus.yaml)
	[ "$makechrootpkg_args" = "null" ] && unset makechrootpkg_args
	makepkg_args=$(yq -r .makepkg_args cactus.yaml)
	[ "$makepkg_args" = "null" ] && unset makepkg_args
	for i in $(find depends -name "*.pkg.tar.zst")
	do
		depends="$depends -I $i"
	done
	depends=${depends# }
	#_eval $(set_cpu) $build_prefix-build -r /mnt -- $depends $makechrootpkg_args -- $makepkg_args --noprogressbar
	_eval $build_prefix-build -r /mnt -- $depends $makechrootpkg_args -- $makepkg_args --noprogressbar
}

pre_build
build
post_build
